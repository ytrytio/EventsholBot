from .vars import vip_rangs, clan_types, indexes

__all__ = [
    "start_text", "balance_text", "farm_text_failure", "farm_text_success", "donate_text", "videocards_text_select",
    "profile_text", "clans_text", "rich_text", "crypto_text", "clan_text", "rate_text", "shop_text",
    "christmas_fair_text",

    "start_keyboard", "donate_keyboard", "shop_keyboard", "videocards_keyboard", "clan_keyboard",
    "profile_clan_keyboard", "clans_keyboard", "clan_peoples_keyboard", "clan_owner_keyboard", "top_keyboard",
    "christmas_fair_keyboard"
]


def start_keyboard(InlineKeyboardButton):
    keyboard = [
        [
            InlineKeyboardButton(
                text='üì≤ –ö–æ–º–∞–Ω–¥—ã',
                callback_data='commands'),
            InlineKeyboardButton(
                text='üëæ –†–ü-–∫–æ–º–∞–Ω–¥—ã',
                url='https://t.me/eventshol_live/78'),
        ],
        [
            InlineKeyboardButton(
                text='‚ûï –î–æ–±–∞–≤–∏—Ç—å –±–æ—Ç–∞ –≤ –≥—Ä—É–ø–ø—É',
                url='https://t.me/eventshol_bot?startgroup'),
        ],
        [
            InlineKeyboardButton(
                text='üì£ –ö–∞–Ω–∞–ª –±–æ—Ç–∞',
                url='https://t.me/eventshol_live'),
            InlineKeyboardButton(
                text='üí¨ –ì—Ä—É–ø–ø–∞ –±–æ—Ç–∞',
                url='https://t.me/eventshol_chat')
        ],
        [
            InlineKeyboardButton(
                text='üëÆ –ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏',
                url='https://teletype.in/@eventshol/privacy-policy')
        ]
    ]
    return keyboard


def shop_keyboard(InlineKeyboardButton, ecoin):
    keyboard = [
        [
            InlineKeyboardButton(
                text='üñ• –í–∏–¥–µ–æ–∫–∞—Ä—Ç—ã',
                callback_data='buyvid')
        ],
        [
            InlineKeyboardButton(
                text='‚≠êÔ∏è VIP - 1–ú$',
                callback_data='pass_vip'),
            InlineKeyboardButton(
                text='‚ûï PLUS - 50–ú$',
                callback_data='pass_plus')
        ],
        [
            InlineKeyboardButton(
                text='üåü ULTRA - 5B$',
                callback_data='pass_ultra'),
            InlineKeyboardButton(
                text='üí† QUANTUM - 100B$',
                callback_data='pass_quantum')
        ],
        [
            InlineKeyboardButton(
                text=f'üí∏ –ö—É–ø–∏—Ç—å –º–∞–∫—Å. –∫–æ–ª-–≤–æ ECoin (1‚Ç† ‚âà {round(ecoin, 2)}$)',
                callback_data='buy_max_ecoins')
        ],
        [
            InlineKeyboardButton(
                text=f'üè∑Ô∏è –ü—Ä–æ–¥–∞—Ç—å –º–∞–∫—Å. –∫–æ–ª-–≤–æ ECoin (1‚Ç† ‚âà {round(ecoin, 2)}$)',
                callback_data='sell_max_ecoins')
        ]
    ]
    return keyboard


def donate_keyboard(InlineKeyboardButton, prices):
    ext_items = [
        [
            InlineKeyboardButton(
                text=f'üëë –ü—Ä–æ–ø—É—Å–∫ PRIME',
                callback_data=f"donatevip_prime"
            )
        ],
        [
            InlineKeyboardButton(
                text=f'üé® –°–≤–æ–π –ø—Ä–µ—Ñ–∏–∫—Å',
                callback_data=f"donateprefix"
            )
        ]
    ]

    keyboard = [
        [
            InlineKeyboardButton(
                text=f'üñ• {prices[i].label}',
                callback_data=f"donatevid{prices[i].label.split(' ')[0]}"
            )
        ] for i in range(len(prices))
    ]

    keyboard = ext_items + keyboard

    return keyboard


def videocards_keyboard(InlineKeyboardButton, factor: float, gpus: int, user_id: int):
    from .funcs import format_num
    base_cost = 50000
    quantities = [1, 10, 25, 50, 100, 250]
    helpers = ['–∞', '', '', '', '', '']

    keyboard = []

    for i in range(len(quantities)):
        total_cost = (base_cost * quantities[i]) + (gpus * factor)
        keyboard.append([
            InlineKeyboardButton(
                text=f'üñ• {quantities[i]} –≤–∏–¥–µ–æ–∫–∞—Ä—Ç{helpers[i]} - {format_num(total_cost)}$',
                callback_data=f'buyvid_{quantities[i]}_{user_id}'
            )
        ])

    return keyboard


def clan_keyboard(clan, InlineKeyboardButton):
    inline_keyboard = [
        [InlineKeyboardButton(text="üí∞ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±—é–¥–∂–µ—Ç", callback_data="clan_set_budget")],
        [
            InlineKeyboardButton(text="üë• –£—á–∞—Å—Ç–Ω–∏–∫–∏", callback_data=f"clan_show_peoples_{clan['owner']}"),
            InlineKeyboardButton(text="üëë –í–ª–∞–¥–µ–ª–µ—Ü", callback_data=f"clan_show_owner_{clan['owner']}")
        ],
        [
            InlineKeyboardButton(text="üìá –°–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ", callback_data="clan_set_name"),
            InlineKeyboardButton(text="üîê –°–º–µ–Ω–∏—Ç—å —Ç–∏–ø", callback_data="clan_set_type")
        ],
        [InlineKeyboardButton(text="‚öîÔ∏è –ö–ª–∞–Ω–æ–≤–∞—è –≤–æ–π–Ω–∞", callback_data="clan_war")]
    ]
    return inline_keyboard


def profile_clan_keyboard(clan_id, user_id, InlineKeyboardButton):
    inline_keyboard = [
        [InlineKeyboardButton(text="üö∑ –í—ã–≥–Ω–∞—Ç—å", callback_data=f"clan_kick_{user_id}")],
        [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"clan_show_peoples_{clan_id}")]
    ]
    return inline_keyboard


def clans_keyboard(clans_row, InlineKeyboardButton):
    from .funcs import format_num
    keyboard = []
    for index, clan_data in enumerate(clans_row, start=1):
        name = clan_data[0]
        money = clan_data[1]
        clan_type = clan_data[2]
        owner_id = clan_data[3]

        button_text = f"{indexes[index - 1]} | {clan_types[clan_type]} | {name} - {format_num(money)}$"
        keyboard.append([InlineKeyboardButton(
            text=button_text,
            callback_data=f"clan_show_info_{owner_id}"
        )])
    return keyboard


def clan_peoples_keyboard(clan_id, members, InlineKeyboardButton):
    keyboard = [
                   [InlineKeyboardButton(text=member['name'], callback_data=f"clan_show_member_{member['id']}")]
                   for member in members
               ] + [
                   [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"clan_show_info_{clan_id}")]
               ]

    return keyboard


def clan_owner_keyboard(owner, InlineKeyboardButton):
    keyboard = [
        [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"clan_show_info_{owner['id']}")]
    ]
    return keyboard


def top_keyboard(users_row, InlineKeyboardButton, symbol):
    from .funcs import format_num
    keyboard = []
    for index, user_data in enumerate(users_row, start=1):
        name = user_data[0]
        money = user_data[1]
        user_id = user_data[2]
        user_tag = user_data[3]

        button_text = f"{indexes[index - 1]} {user_tag} {name} - {format_num(money)}{symbol}"
        keyboard.append([InlineKeyboardButton(
            text=button_text,
            callback_data=f"profile_{user_id}"
        )])
    return keyboard


def christmas_fair_keyboard(InlineKeyboardButton):
    keyboard = [
        [
            InlineKeyboardButton(
                text='üÜô –£–ª—É—á—à–µ–Ω–∏–µ –ö—Ä–∏—Å—Ç–∞–ª–ª–∏–∑–∞—Ç–æ—Ä–∞',
                callback_data='upgrade_crystallise')
        ],
        [
            InlineKeyboardButton(
                text='üî§ [–°–ê–ù–¢–ê] - 500 ‚ùÑÔ∏è',
                callback_data='prefix_santa'),
            InlineKeyboardButton(
                text='üî§ [–ì–†–ò–ù–ß] - 500 ‚ùÑÔ∏è',
                callback_data='prefix_grinch')
        ],
        [
            InlineKeyboardButton(
                text='üî§ [–°–ù–ï–ì–û–í–ò–ö] - 200 ‚ùÑÔ∏è',
                callback_data='prefix_snowman'),
            InlineKeyboardButton(
                text='üî§ [–≠–õ–¨–§] - 250 ‚ùÑÔ∏è',
                callback_data='prefix_elf')
        ],
        [
            InlineKeyboardButton(
                text='üöÄ +15% –ë–£–°–¢ - 150 ‚ùÑÔ∏è',
                callback_data='boost_15'),
            InlineKeyboardButton(
                text='üöÄ +30% –ë–£–°–¢ - 300 ‚ùÑÔ∏è',
                callback_data='boost_30')
        ]
    ]
    return keyboard


def start_text(user_name: str):
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å—Ç–∞—Ä—Ç–æ–≤—ã–π —Ç–µ–∫—Å—Ç."""
    return f"""
‚ú® *–ü—Ä–∏–≤–µ—Ç, {user_name}!*

üöÄ *–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:* 
"""


def balance_text(cash: str, ecoins: str, value: int, level: int):
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç –±–∞–ª–∞–Ω—Å–∞."""
    return f"""
‚ú®üí∞ *–í–∞—à –ë–∞–ª–∞–Ω—Å* üí∞‚ú®

üíµ *–î–µ–Ω—å–≥–∏:* {cash}
üíé *ECoins:* {ecoins}

‚ùÑÔ∏è *–í–∞—à–∏ —Å–Ω–µ–∂–∏–Ω–∫–∏:* {value}
üÜô *–£—Ä–æ–≤–µ–Ω—å –ö—Ä–∏—Å—Ç–∞–ª–ª–∏–∑–∞—Ç–æ—Ä–∞:* {level}

üöÄ *–ó–∞—Ä–∞–±–æ—Ç–∞–π—Ç–µ –±–æ–ª—å—à–µ* —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /farming!
"""


def farm_text_failure(time: int):
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞ –º–∞–π–Ω–∏–Ω–≥ —Ñ–µ—Ä–º—ã –≤ —Å–ª—É—á–∞–µ –Ω–µ—É–¥–∞—á–∏."""
    from .funcs import format_time
    return f"""
üí∏ *–°—Ç–∞—Ç—É—Å –ú–∞–π–Ω–∏–Ω–≥ –§–µ—Ä–º—ã* üí∏

‚úÖ *–í—ã —É–∂–µ —Å–æ–±–∏—Ä–∞–ª–∏ –¥–æ—Ö–æ–¥ —Å –º–∞–π–Ω–∏–Ω–≥ —Ñ–µ—Ä–º—ã!*  
‚è≥ *–°–ª–µ–¥—É—é—â–∏–π –ø—Ä–∏—Ö–æ–¥:* {format_time(time)}  

üöÄ *–í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å –ø–æ–∑–∂–µ!*
"""


def farm_text_success(ecoins: float, vip: str, videocards: str, multiplier: int, boost: float, event_tokens: int = 0):
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç –¥–ª—è —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Ö–æ–¥–∞ –æ—Ç –º–∞–π–Ω–∏–Ω–≥–∞."""
    from .funcs import format_num
    event_text = f"\n‚ùÑÔ∏è *–í–∞—à –ö—Ä–∏—Å—Ç–∞–ª–ª–∏–∑–∞—Ç–æ—Ä —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–ª {event_tokens} —Å–Ω–µ–∂–∏–Ω–æ–∫!*" if event_tokens else ""
    boost_text = f"\nüöÄ –ê–∫—Ç–∏–≤–µ–Ω {boost * 100}% –±—É—Å—Ç!\n" if boost else ""

    return f"""
üí∞ *–î–æ—Ö–æ–¥ –æ—Ç –ú–∞–π–Ω–∏–Ω–≥–∞* üí∞

‚ú® *–í—ã –ø–æ–ª—É—á–∏–ª–∏:* {format_num(ecoins)} ‚Ç†  
üåü *–í–∞—à –ø—Ä–æ–ø—É—Å–∫:* {vip}  
üñ• *–í–∏–¥–µ–æ–∫–∞—Ä—Ç—ã:* {videocards}  
‚úñÔ∏è *–ú–Ω–æ–∂–∏—Ç–µ–ª—å:* {multiplier}  
{event_text}
{boost_text}
üí≥ *–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –±–∞–ª–∞–Ω—Å:* /cash.
"""


def donate_text():
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å—Ç–∞—Ä—Ç–æ–≤—ã–π —Ç–µ–∫—Å—Ç."""
    return f"""
üè™ *–î–æ–Ω–∞—Ç-–º–∞–≥–∞–∑–∏–Ω* üè™

üöÄ *–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä –¥–ª—è –ø–æ–∫—É–ø–∫–∏:* 
"""


def videocards_text_select(user):
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç –≤—ã–±–æ—Ä–∞ –≤–∏–¥–µ–æ–∫–∞—Ä—Ç."""
    return f"""
<b>üíª –ü–æ–∫—É–ø–∫–∞ –≤–∏–¥–µ–æ–∫–∞—Ä—Ç üíª</b>

‚ùó <i>Ô∏è–¶–µ–Ω—ã –∏ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω—ã —Ç–æ–ª—å–∫–æ –¥–ª—è {user}!</i>
üõí –í—ã–±–µ—Ä–∏—Ç–µ –Ω–∏–∂–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∏–¥–µ–æ–∫–∞—Ä—Ç –¥–ª—è –ø–æ–∫—É–ø–∫–∏:
"""


def profile_text(link, hbold, user, clan):
    from .funcs import format_num
    information = f"""
üë§ {link}
<b>–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {hbold(user['name'])}:</b>

üè∞ –ö–ª–∞–Ω: {hbold(clan)}
üè∑ –ü—Ä–µ—Ñ–∏–∫—Å: {hbold(user['tag'])}
üìá –ü—Å–µ–≤–¥–æ–Ω–∏–º: {hbold(user['name'])}
üÜî ID: {user['id']}
üíµ –ë–∞–ª–∞–Ω—Å: {format_num(user['cash'])}$
üí≥ ECoins: {format_num(user['bitcoins'])}‚Ç†
üñ• –í–∏–¥–µ–æ–∫–∞—Ä—Ç—ã: {user['videocards']} —à—Ç.
ü™™ –ü—Ä–æ–ø—É—Å–∫: {vip_rangs[user['isvip']]}
    """
    return information


def clan_text(clan_row, owner_link, members):
    from .funcs import format_num
    information = f"""
üèÜ <b>–ö–ª–∞–Ω:</b> {clan_row['name']}:
üíµ <b>–ë—é–¥–∂–µ—Ç:</b> {format_num(clan_row['money'])}$
üõ° <b>–¢–∏–ø:</b> {'–ó–∞–∫—Ä—ã—Ç—ã–π' if clan_row['type'] == 0 else '–û—Ç–∫—Ä—ã—Ç—ã–π'}
üöô <b>–¢–∞–Ω–∫–∏:</b> {clan_row['tanks']}
üéØ <b>–ê—Ä—Ç–∏–ª–ª–µ—Ä–∏–∏:</b> {clan_row['artillery']}
ü™ñ <b>–ü–µ—Ö–æ—Ç–∞:</b> {clan_row['troops']}
*Ô∏è‚É£ <b>–û—á–∫–∏:</b> {format_num(clan_row['points'])}

üëë <b>–í–ª–∞–¥–µ–ª–µ—Ü:</b> {owner_link}
üë• <b>–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤:</b> {len(members)}
    """
    return information


def clans_text():
    return """
<b>üè∞ –¢–û–ü-10 —Å–∞–º—ã—Ö –±–æ–≥–∞—Ç—ã—Ö –∫–ª–∞–Ω–æ–≤ üè∞</b>

üîΩ –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–ª–∞–Ω –¥–ª—è –µ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞:
    """


def shop_text():
    return f"""
üõí *–ú–∞–≥–∞–∑–∏–Ω* üõí

üõçÔ∏è *–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä –¥–ª—è –ø–æ–∫—É–ø–∫–∏:* 
"""


def rich_text():
    return """
<b>ü§ë –¢–û–ü-10 —Å–∞–º—ã—Ö –±–æ–≥–∞—Ç—ã—Ö –∏–≥—Ä–æ–∫–æ–≤ ($) ü§ë</b>

üîΩ –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∏–≥—Ä–æ–∫–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø—Ä–æ—Ñ–∏–ª—è:
    """


def crypto_text():
    return """
<b>ü§ë –¢–û–ü-10 —Å–∞–º—ã—Ö –±–æ–≥–∞—Ç—ã—Ö –∏–≥—Ä–æ–∫–æ–≤ (‚Ç†)ü§ë</b>

üîΩ –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∏–≥—Ä–æ–∫–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø—Ä–æ—Ñ–∏–ª—è:
    """


def rate_text(rate):
    text = f"""
üìà <b>–ö—É—Ä—Å EventCoin ‚Ç†</b> üìâ

üìä <b>1‚Ç† ‚âà {round(rate, 2)}$</b>  

üí± <b>–†–∞–∑–º–µ–Ω—è—Ç—å –º–æ–Ω–µ—Ç—ã:</b> /shop
üìà <b>–ö—É–ø–∏—Ç—å –º–æ–Ω–µ—Ç—ã:</b> /buyCrypto [—á–∏—Å–ª–æ]
üìâ <b>–ü—Ä–æ–¥–∞—Ç—å –º–æ–Ω–µ—Ç—ã:</b> /sellCrypto [—á–∏—Å–ª–æ]

‚ú® <b>–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ:</b> –ö—É—Ä—Å –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –æ–±–º–µ–Ω–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π.
"""
    return text


def christmas_fair_text():
    return f"""
üéÑ *–ù–æ–≤–æ–≥–æ–¥–Ω—è—è –Ø—Ä–º–∞—Ä–∫–∞* üéÑ

üÜô - –£–ª—É—á—à–µ–Ω–∏–µ
üî§ - –ü—Ä–µ—Ñ–∏–∫—Å
üöÄ - –ë—É—Å—Ç –º–∞–π–Ω–∏–Ω–≥ —Ñ–µ—Ä–º—ã (–Ω–∞ –≤—Ä–µ–º—è —Å–æ–±—ã—Ç–∏—è)

üéÅ *–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–π —Ç–æ–≤–∞—Ä:* 
"""


# def videocards_buying_text():
#     return f"""
#
# """
