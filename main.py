#!/usr/bin/env python3

from aiogram import Bot, Dispatcher, F
from aiogram.typesmport import Message
from aiogram.filters import Command

from asyncio import run as async_run
from time import time as unixtime
from dotenv import dotenv_values
from applib import logf, with_db
from pathlib import Path
from typing import Dict
from uuid import uuid4
from json import loads

from os import environ
from dialogflow import SessionsClient
from google.api_core.exceptions import InvalidArgument


with open(Path(__file__).parent/'dialog_flow.json') as f:
    environ["GOOGLE_APPLICATION_CREDENTIALS"] = "dialog_flow.json"

    DIALOGFLOW_PROJECT_ID = "project_id"
    DIALOGFLOW_LANGUAGE_CODE = '[LANGUAGE]'
    SESSION_ID = 'me'


session_client = SessionsClient()


secrets: Dict[str, str] = dotenv_values('.env')
TOKEN: str = secrets["BOT_TOKEN"]

bot: Bot = Bot(TOKEN)
dp = Dispatcher(bot=bot)




# TelegramBot = require('node-telegram-bot-api');
# sqlite3 = require('sqlite3').verbose();
# dialogflow = require('@google-cloud/dialogflow').v2beta1;

# const sharp = require('sharp');
#  const fs = require('fs')

event_coin_path = './rate.txt'
# logf(chatCompletion.choices[0].message.content);


payment_token = "284685063:TEST:Y2YxMWE3NmJkODRh"

admins_id = [1432248216,1300210900]
credentials = require('./key.json')

sessionClient = SessionsClient({ credentials })
projectId = 'small-talk-rwvf'

vid250 = './250videocards.png'

clan_type = (
	"–ó–∞–∫—Ä—ã—Ç—ã–π",
	"–û—Ç–∫—Ä—ã—Ç—ã–π"
)
decor_clan_type = (
	"üîí",
	"üîì"
)

max_videocards = (
  250,
  500,
  750,
)

farming_timers = (
  7200,
  3600,
  1800,
)

vip_rangs = (
  "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç",
  "–û–±—ã—á–Ω—ã–π VIP",
  "MEGAVIP",
  "PREMIUM",
)

multiplies = (
  1,
  2,
  4,
)

commands = (
  "/start - –≤—ã–≤–æ–¥–∏—Ç –º–µ–Ω—é –±–æ—Ç–∞.",
  "/cash - –≤—ã–≤–æ–¥–∏—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤–∞—à–µ–≥–æ —Å—á–µ—Ç–∞.",
  "/farming - –ø–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –¥–µ–Ω—å–≥–∏.",
  "/rich_top - –≤—ã–≤–æ–¥–∏—Ç —Ç–æ–ø 10 —Å–∞–º—ã—Ö –±–æ–≥–∞—Ç—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.",
  "/crypto_top - –≤—ã–≤–æ–¥–∏—Ç —Ç–æ–ø 10 —Å–∞–º—ã—Ö –±–æ–≥–∞—Ç—ã—Ö –∫—Ä–∏–ø—Ç–æ–º–∞–π–Ω–µ—Ä–æ–≤.",
  "/ping - –≤—ã–≤–æ–¥–∏—Ç –∑–∞–¥–µ—Ä–∂–∫—É –±–æ—Ç–∞.",
  "/shop - –≤—ã–≤–æ–¥–∏—Ç –º–∞–≥–∞–∑–∏–Ω.",
  "/profile - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–æ—Ñ–∏–ª—å (–ø–∏—Å–∞—Ç—å –æ—Ç–≤–µ—Ç–æ–º).",
  "/my_clan - –ø–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∞—à–µ–º –∫–ª–∞–Ω–µ.",
  "/clans - –ø–æ–∫–∞–∂–µ—Ç —Ç–æ–ø –±–æ–≥–∞—Ç—ã—Ö –∫–ª–∞–Ω–æ–≤.",
  "/give_c - –ø–µ—Ä–µ–¥–∞—Ç—å –¥–µ–Ω—å–≥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é (–ø–∏—Å–∞—Ç—å –æ—Ç–≤–µ—Ç–æ–º).",
  "/give_v - –ø–µ—Ä–µ–¥–∞—Ç—å –≤–∏–¥–µ–æ–∫–∞—Ä—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é (–ø–∏—Å–∞—Ç—å –æ—Ç–≤–µ—Ç–æ–º).",
  "/post_sub - –æ—Ç–ø–∏—Å–∞—Ç—å—Å—è/–ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É –∏–∑ –∫–∞–Ω–∞–ª–∞.",
  "/code {–∫–æ–¥} - –ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç –∫—É—á–∫—É —Ç–µ–∫—Å—Ç–∞ –≤ –∫—Ä–∞—Å–∏–≤—ã–π –¥–∏–∑–∞–π–Ω —Å –∫–æ–¥–æ–º.",
  "/rate - –≤—ã–≤–µ—Å—Ç–∏ –∫—É—Ä—Å EventCoin.",
  "/buyCrypto {—á–∏—Å–ª–æ} - –∫—É–ø–∏—Ç—å EventCoin –ø–æ –∫—É—Ä—Å—É.",
  "/sellCrypto {—á–∏—Å–ª–æ} - –ø—Ä–æ–¥–∞—Ç—å EventCoin –ø–æ –∫—É—Ä—Å—É.",
)

clans = (
  "–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç",
)

lastToId = 0


botReady = false
startTime = unixtime()
cooldownPeriod = 5000




@dp.message_handler(Command('start'))
async def start(message: Message):
    await message.reply('Hello!')


@dp.message_handler(F.text.lower() == '–ø—Ä–∏–≤–µ—Ç')
async def start(message: Message):
    await message.reply('Hello!')


async_run(dp.start_polling())
